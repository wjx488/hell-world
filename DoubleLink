/**
 * @author 辛鑫
 * @version 1.0.0
 * @date 2022/8/31 9:05
 * @Description TODO 认定结点从0开始
 */
public class DoubleLinkList<Any> {

    Node head;//指向头结点的指针

    Node tail;//指向尾结点

    Node current;

    int maxSize;//结点个数

    public DoubleLinkList(){
        //构造一个头结点
        head=new Node();

        //构造一个尾结点
        tail=new Node();

        //建立双向关系
        head.setNext(tail);
        tail.setPrev(head);
        this.maxSize=0;
    }


    public  void index(int i){
        //判断参数是否正确
        if(i==-1){
            current=head;
            return;
        }
        current=head.getNext();//首元结点 第一个有元素的结点
        int j=0;
        while(current!=tail && j<i){
            current=current.getNext();
            j++;
        }
    }

    /**
     * 插入元素
     * @param a 在a下标前插入数据
     * @param data 待插入的数据
     */
    public void add(int a,Any data){
        //1.先创建一个结点 将待插入数据放入结点之中
        Node node=new Node();
        node.setData(data);
        //2.找到待插入结点的前一个结点
        index(a-1);
        //3.插入操作
        node.setNext(current.getNext());
        current.setNext(node);
        node.setPrev(current);
        current.getNext().getNext().setPrev(node);
        maxSize++;
    }

    /**
     * 删除结点
     * @param i 待删除结点的下标
     */
    public void delete(int i){
        if(maxSize==0){
            //抛异常 结点为空
        }
        index(i-1);
        //删除操作
        current.setNext(current.getNext().getNext());
        current.getNext().setPrev(current);
        maxSize--;
    }
}
